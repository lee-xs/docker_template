# 指定本 yml 依从的 compose 哪个版本制定的
version : '3.4'
services:
  nginx:
    # 指定自定义容器名称
    container_name: nginx
    # 指定容器运行的镜像
    image: nginx
    # 构建镜像上下文路径
    build:
      context: ./nginx
    ports:
      - "8888:8888"
    # 将主机的数据卷或着文件挂载到容器里
    volumes:
      - ./nginx/html/dist:/home/alees/projects/vue3-download-analysis
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d
  redis:
    container_name: redis
    image: redis
    build:
      context: ./redis
    ports:
      - "6379:6379"
    volumes:
      - "./redis/conf/redis.conf:/home/alees/redis/redis.conf"
      - "./redis/data:/data"
    # 覆盖容器启动的默认命令
    command: redis-server /home/alees/redis/redis.conf
  mysql:
    container_name: mysql
    image: mysql:latest
    # 赋予容器CAP_SYS_NICE的能力，允许容器增加进程友好值、设置实时调度策略、设置cpu亲和性和其他操作
    cap_add:
      - SYS_NICE
    build:
      context: ./mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/logs:/logs
      - ./mysql/data:/var/lib/mysql
    command: [
      'mysqld',
      '--innodb-buffer-pool-size=80M',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-time-zone=+8:00',
      '--lower-case-table-names=1'
    ]
    # 添加环境变量
    environment:
      # 指定root用户密码
      MYSQL_ROOT_PASSWORD: aleestar123
      # 初始化数据库(后续的初始化sql会在这个库执行)
      MYSQL_DATABASE: 'init_temp'
      MYSQL_ROOT_HOST: '%'
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    environment:
      TZ: "Asia/Shanghai"
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: aleestar123
    volumes:
      - ./mongo/data:/data/db
      - ./mongo/logs:/var/log/mongodb
    ports:
      - "27017:27017"
  etcd:
    image: bitnami/etcd:latest
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
  apisix:
    image: apache/apisix:latest
    restart: always
    volumes:
      - ./apisix/conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    ports:
      # APISIX HTTP 端口
      - "9080:9080"
      # Control API 端口
      - "9090:9090"
      # Admin API 端口
      - "9180:9180"
    depends_on:
      - etcd
  apisix-dashboard:
    image: apache/apisix-dashboard:latest
    restart: always
    volumes:
      - ./apisix/conf/dashboard.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
      # Dashboard 管理端口
      - "9000:9000"

volumes:
  etcd_data:
    driver: local